// Mocks generated by Mockito 5.2.0 from annotations
// in mockito_mocktail_migration_helper/test/fixtures/test_3.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;

import 'test.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [TestClass1].
///
/// See the documentation for Mockito's code generation for more information.
class MockTestClass1 extends _i1.Mock implements _i2.TestClass1 {
  MockTestClass1() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get value =>
      (super.noSuchMethod(Invocation.getter(#value), returnValue: '')
          as String);
  @override
  int call(int? v) =>
      (super.noSuchMethod(Invocation.method(#call, [v]), returnValue: 0)
          as int);
}

/// A class which mocks [TestClass2].
///
/// See the documentation for Mockito's code generation for more information.
class MockTestClass2 extends _i1.Mock implements _i2.TestClass2<String> {
  MockTestClass2() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get value =>
      (super.noSuchMethod(Invocation.getter(#value), returnValue: '')
          as String);
  @override
  _i3.Future<int> call({int? v}) =>
      (super.noSuchMethod(Invocation.method(#call, [], {#v: v}),
          returnValue: Future<int>.value(0)) as _i3.Future<int>);
}
